spring.datasource.url=jdbc:mysql://localhost:3306/user_micro
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
server.port=8081
#Hibernate properties to create table automatically
spring.jpa.hibernate.ddl-auto=update

#this property shows query on console when we hit apis
spring.jpa.show-sql=true

#Show sql properties to see query on console

#Register service to eureka server
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.application.name=USER_SERVICE

#Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

#circuit breaker configuration using resilience4j lib
#register health indicator true will show all below information on UI health
resilience4j.circuitbreaker.instances.ratingHotelBreaker.register-health-indicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-size=12
resilience4j.circuitbreaker.instances.ratingHotelBreaker.sliding-window-type=COUNT_BASED

#Rate Limiter Configuration
resilience4j.ratelimiter.instances.rateLimitBreaker.limit-refresh-period=4s
resilience4j.ratelimiter.instances.rateLimitBreaker.limit-for-period=2
resilience4j.ratelimiter.instances.rateLimitBreaker.timeout-duration=0s

